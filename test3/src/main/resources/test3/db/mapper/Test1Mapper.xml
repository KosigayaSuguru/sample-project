<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="test3.db.mapper.Test1Mapper">
  <resultMap id="BaseResultMap" type="test3.db.entity.Test1">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="test1_col1" jdbcType="INTEGER" property="test1Col1" />
    <result column="test1_col2" jdbcType="INTEGER" property="test1Col2" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    id, test1_col1, test1_col2
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from test1
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    delete from test1
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="test3.db.entity.Test1">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    insert into test1 (id, test1_col1, test1_col2
      )
    values (#{id,jdbcType=INTEGER}, #{test1Col1,jdbcType=INTEGER}, #{test1Col2,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="test3.db.entity.Test1">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    insert into test1
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="test1Col1 != null">
        test1_col1,
      </if>
      <if test="test1Col2 != null">
        test1_col2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="test1Col1 != null">
        #{test1Col1,jdbcType=INTEGER},
      </if>
      <if test="test1Col2 != null">
        #{test1Col2,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="test3.db.entity.Test1">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    update test1
    <set>
      <if test="test1Col1 != null">
        test1_col1 = #{test1Col1,jdbcType=INTEGER},
      </if>
      <if test="test1Col2 != null">
        test1_col2 = #{test1Col2,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="test3.db.entity.Test1">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Jan 14 23:45:30 JST 2017.
    -->
    update test1
    set test1_col1 = #{test1Col1,jdbcType=INTEGER},
      test1_col2 = #{test1Col2,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

	<!-- ************ my query ************ -->

	<select id="selectTest1" resultType="Test1">
		select * from test1
	</select>

	<!-- HasMany sample -->
	<resultMap autoMapping="true" id="test1test2Map" type="Test1Test2Dto">
		<id column="id" jdbcType="INTEGER" property="id" />
		<collection autoMapping="true" columnPrefix="prefix_" ofType="Test2" property="test2List" />
	</resultMap>

	<select id="selectTest1Test2" resultMap="test1test2Map">
		select
		a.id, a.test1_col1, a.test1_col2,
		b.id as prefix_id,
		b.test1_id as prefix_test1_id,
		b.test2_col1 as prefix_test2_col1,
		b.test2_col2 as prefix_test2_col2
		from test1 as a
		join test2 as b on a.id = b.test1_id
	</select>

	<!-- SQLの結果を1行ごとに全部マッピング sample -->
	<!-- ※HasManyの方を推奨 -->
	<resultMap autoMapping="true" id="test1test2Map2" type="Test1Test2Dto2">
		<association autoMapping="true" javaType="Test1" property="test1" />
		<association autoMapping="true" javaType="Test2" property="test2" />
	</resultMap>

	<select id="selectTest1Test2b" resultMap="test1test2Map2">
		select *
		from test1 as a
		join test2 as b on a.id = b.test1_id
	</select>
</mapper>